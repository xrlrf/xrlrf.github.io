<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xiaorui&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wustxiao.cn/"/>
  <updated>2017-10-09T14:54:34.269Z</updated>
  <id>http://wustxiao.cn/</id>
  
  <author>
    <name>Xiao Rui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript入门篇</title>
    <link href="http://wustxiao.cn/2017/10/09/JavaScript%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>http://wustxiao.cn/2017/10/09/JavaScript入门篇/</id>
    <published>2017-10-09T14:52:45.000Z</published>
    <updated>2017-10-09T14:54:34.269Z</updated>
    
    <content type="html"><![CDATA[<h3 id="javascript介绍"><a href="#javascript介绍" class="headerlink" title="javascript介绍"></a>javascript介绍</h3><pre><code>JavaScript代码写在`&lt;script&gt;&lt;/script&gt;`之间。`&lt;script type=&quot;text/javascript&quot;&gt;表示在&lt;script&gt;&lt;/script&gt;`之间的是文本类型(text),javascript是为了告诉浏览器里面的文本是属于JavaScript语言。</code></pre><h3 id="JS文件放在哪？"><a href="#JS文件放在哪？" class="headerlink" title="JS文件放在哪？"></a>JS文件放在哪？</h3><ol><li>放在<code>&lt;body&gt;&lt;/body&gt;</code>内部引用</li><li>放在<code>&lt;head&gt;&lt;/head&gt;</code>内部引用</li><li><p>单独写一个js文件存放，需要在哪个地方引用就在哪个地方用`<script src="script.js"></script>引用</p><p> 我们可以把HTML文件和JS代码分开,并单独创建一个JavaScript文件(简称JS文件),其文件后缀通常为.js，然后将JS代码直接写在JS文件中。</p><p> <strong>注意:在JS文件中，不需要<code>&lt;script&gt;</code>标签,直接编写JavaScript代码就可以了。</strong></p></li></ol><p>JS文件不能直接运行，需嵌入到HTML文件中执行，我们需在HTML中添加如下代码，就可将JS文件嵌入HTML文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171009195315588?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li>放在<code>&lt;head&gt;</code>部分</li></ul><p>最常用的方式是在页面中head部分放置<code>&lt;script&gt;</code>元素，浏览器解析head部分就会执行这个代码，然后才解析页面的其余部分。</p><ul><li>放在<code>&lt;body&gt;</code>部分</li></ul><p>JavaScript代码在网页读取到该语句的时候就会执行。</p><p><strong>注意:</strong> javascript作为一种脚本语言可以放在html页面中任何位置，但是浏览器解释html时是按先后顺序的，所以前面的script就先被执行。比如进行页面显示初始化的js必须放在head里面，因为初始化都要求提前进行（如给页面body设置css等）；而如果是通过事件调用执行的function那么对位置没什么要求的。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量名可以任意取名，但要遵循命名规则:</p><pre><code>1.变量必须使用字母、下划线(_)或者美元符($)开始。2.然后可以使用任意多个英文字母、数字、下划线(_)或者美元符($)组成。3.不能使用JavaScript关键词与JavaScript保留字。</code></pre><p>变量要先声明再赋值，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var mychar;</div><div class="line">mychar=&quot;javascript&quot;;</div><div class="line">var mynum = 6;</div></pre></td></tr></table></figure><p>变量可以重复赋值，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var mychar;</div><div class="line">mychar=&quot;javascript&quot;;</div><div class="line">mychar=&quot;hello&quot;;</div></pre></td></tr></table></figure><p><strong>注意:</strong></p><ol><li>在JS中区分大小写，如变量mychar与myChar是不一样的，表示是两个变量。</li><li>变量虽然也可以不声明，直接使用，但不规范，需要先声明，后使用。</li></ol><h3 id="if-else判断语句"><a href="#if-else判断语句" class="headerlink" title="if else判断语句"></a>if else判断语句</h3><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if(条件)</div><div class="line">&#123; 条件成立时执行的代码 &#125;</div><div class="line">else</div><div class="line">&#123; 条件不成立时执行的代码 &#125;</div></pre></td></tr></table></figure><p>假设我们通过年龄来判断是否为成年人，如年龄大于等于18岁，是成年人，否则不是成年人。代码表示如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">   var myage = 18;</div><div class="line">   if(myage&gt;=18)  //myage&gt;=18是判断条件</div><div class="line">   &#123; document.write(&quot;你是成年人。&quot;);&#125;</div><div class="line">   else  //否则年龄小于18</div><div class="line">   &#123; document.write(&quot;未满18岁，你不是成年人。&quot;);&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>如何定义一个函数呢？基本语法如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">function 函数名()</div><div class="line">&#123;</div><div class="line">     函数代码;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>说明:</p><ol><li>function定义函数的关键字。</li><li>“函数名”你为函数取的名字。</li><li>“函数代码”替换为完成特定功能的代码。</li></ol><p>我们来编写一个实现两数相加的简单函数,并给函数起个有意义的名字：“add2”，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">function add2()&#123;</div><div class="line">   var sum = 3 + 2;</div><div class="line">   alert(sum);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>函数调用:</p><p>函数定义好后，是不能自动执行的，所以需调用它,只需直接在需要的位置写函数就ok了,代码如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">&lt;title&gt;函数&lt;/title&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">function add2()&#123;</div><div class="line">sum = 5 + 6;</div><div class="line">alert(sum);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;form&gt;</div><div class="line">&lt;input type=&quot;button&quot; value=&quot;点击&quot; onclick=&quot;add2()&quot;&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><h3 id="输出内容（document-write）"><a href="#输出内容（document-write）" class="headerlink" title="输出内容（document.write）"></a>输出内容（document.write）</h3><pre><code>document.write() 可用于直接向 HTML 输出流写内容。简单的说就是直接在网页中输出内容。</code></pre><p>第一种:输出内容用””括起，直接输出””号内的内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">  document.write(&quot;I love JavaScript！&quot;); //内容用&quot;&quot;括起来，&quot;&quot;里的内容直接输出。</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p><p>第二种:通过变量，输出内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">  var mystr=&quot;hello world!&quot;;</div><div class="line">  document.write(mystr);  //直接写变量名，输出变量存储的内容。</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p><p>第三种:输出多项内容，内容之间用+号连接。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">  var mystr=&quot;hello&quot;;</div><div class="line">  document.write(mystr+&quot;I love JavaScript&quot;); //多项内容之间用+号连接</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p><p>第四种:输出HTML标签，并起作用，标签使用””括起来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">  var mystr=&quot;hello&quot;;</div><div class="line">document.write(mystr+&quot;&lt;br&gt;&quot;);//输出hello后，输出一个换行符</div><div class="line">  document.write(&quot;JavaScript&quot;);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><h3 id="警告（alert-消息对话框）"><a href="#警告（alert-消息对话框）" class="headerlink" title="警告（alert 消息对话框）"></a>警告（alert 消息对话框）</h3><p>我们在访问网站的时候，有时会突然弹出一个小窗口，上面写着一段提示信息文字。如果你不点击“确定”，就不能对网页做任何操作，这个小窗口就是使用alert实现的。</p><p>语法:</p><pre><code>alert(字符串或变量);  </code></pre><p>看下面的代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">   var mynum = 30;</div><div class="line">   alert(&quot;hello!&quot;);</div><div class="line">   alert(mynum);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><h3 id="确认（confirm-消息对话框）"><a href="#确认（confirm-消息对话框）" class="headerlink" title="确认（confirm 消息对话框）"></a>确认（confirm 消息对话框）</h3><p>confirm 消息对话框通常用于允许用户做选择的动作，如：“你对吗？”等。弹出对话框(包括一个确定按钮和一个取消按钮)。</p><p>语法:</p><pre><code>confirm(str);</code></pre><p>参数说明:</p><pre><code>str：在消息对话框中要显示的文本</code></pre><p>返回值: Boolean值</p><pre><code>当用户点击&quot;确定&quot;按钮时，返回true当用户点击&quot;取消&quot;按钮时，返回false</code></pre><p><strong>注: 通过返回值可以判断用户点击了什么按钮</strong></p><p>看下面的代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">    var mymessage=confirm(&quot;你喜欢JavaScript吗?&quot;);</div><div class="line">    if(mymessage==true)</div><div class="line">    &#123;   document.write(&quot;很好,加油!&quot;);   &#125;</div><div class="line">    else</div><div class="line">    &#123;  document.write(&quot;JS功能强大，要学习噢!&quot;);   &#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><h3 id="提问（prompt-消息对话框）"><a href="#提问（prompt-消息对话框）" class="headerlink" title="提问（prompt 消息对话框）"></a>提问（prompt 消息对话框）</h3><p>prompt弹出消息对话框,通常用于询问一些需要与用户交互的信息。弹出消息对话框（包含一个确定按钮、取消按钮与一个文本输入框）。</p><p>语法:</p><pre><code>prompt(str1, str2);</code></pre><p>参数说明：</p><pre><code>str1: 要显示在消息对话框中的文本，不可修改str2：文本框中的内容，可以修改</code></pre><p>返回值:</p><pre><code>1. 点击确定按钮，文本框中的内容将作为函数返回值2. 点击取消按钮，将返回null</code></pre><p>看看下面代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var myname=prompt(&quot;请输入你的姓名:&quot;);</div><div class="line">if(myname!=null)</div><div class="line">  &#123;   alert(&quot;你好&quot;+myname); &#125;</div><div class="line">else</div><div class="line">  &#123;  alert(&quot;你好 my friend.&quot;);  &#125;</div></pre></td></tr></table></figure><h3 id="打开新窗口（window-open）"><a href="#打开新窗口（window-open）" class="headerlink" title="打开新窗口（window.open）"></a>打开新窗口（window.open）</h3><p>open() 方法可以查找一个已经存在或者新建的浏览器窗口。</p><p>语法：</p><pre><code>window.open([URL], [窗口名称], [参数字符串])</code></pre><p>参数说明:</p><pre><code>URL：可选参数，在窗口中要显示网页的网址或路径。如果省略这个参数，或者它的值是空字符串，那么窗口就不显示任何文档。窗口名称：可选参数，被打开窗口的名称。    1. 该名称由字母、数字和下划线字符组成。    2. &quot;_top&quot;、&quot;_blank&quot;、&quot;_self&quot;具有特殊意义的名称。       _blank：在新窗口显示目标网页       _self：在当前窗口显示目标网页       _top：框架网页中在上部窗口中显示目标网页    3. 相同 name 的窗口只能创建一个，要想创建多个窗口则 name 不能相同。    4. name 不能包含有空格。参数字符串：可选参数，设置窗口参数，各参数用逗号隔开。</code></pre><p>参数表：<br>| 参数    |     值            |说明 |<br>|————|————–|————-|<br>|top|Number|窗口顶部离开屏幕顶部的像素数|<br>|left|Number|窗口左端离开屏幕左端的像素数|<br>|width|Number|窗口的宽度|<br>|height|Number|窗口的高度|<br>|menubar|yes,no|窗口有没有菜单|<br>|toolbar|yes,no|窗口有没有工具条|<br>|scrollbars|yes,no|窗口有没有滚动条|<br>|status|yes,no|窗口有没有状态栏|</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">&lt;title&gt;prompt&lt;/title&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">function Wopen()&#123;</div><div class="line">window.open(&apos;http://www.imooc.com&apos;,&apos;_blank&apos;,&apos;width=600,height=400,menubar=no,toolbar=no,status=no,scrollbars=yes,top=10,left=0&apos;)</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;form&gt;</div><div class="line">&lt;input type=&quot;button&quot; value=&quot;点击我，打开新窗口&quot; onclick=&quot;Wopen()&quot;&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><h3 id="关闭窗口（window-close）"><a href="#关闭窗口（window-close）" class="headerlink" title="关闭窗口（window.close）"></a>关闭窗口（window.close）</h3><p>close()关闭窗口</p><p>用法：</p><pre><code>window.close();   //关闭本窗口</code></pre><p>或</p><pre><code>&lt;窗口对象&gt;.close();   //关闭指定的窗口</code></pre><p>例如:关闭新建的窗口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">   var mywin=window.open(&apos;http://www.imooc.com&apos;); //将新打的窗口对象，存储在变量mywin中</div><div class="line">   mywin.close();</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><h3 id="认识DOM"><a href="#认识DOM" class="headerlink" title="认识DOM"></a>认识DOM</h3><p>文档对象模型DOM（Document Object Model）定义访问和处理HTML文档的标准方法。DOM 将HTML文档呈现为带有元素、属性和文本的树结构（节点树）。</p><p>先来看看下面代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">&lt;title&gt;DOM&lt;/title&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;h2&gt;&lt;a href=&quot;http://www.imooc.com&quot;&gt;javascript DOM&lt;/a&gt;&lt;/h2&gt;</div><div class="line">&lt;p&gt;对HTML元素进行操作，可添加，改变或移除CSS样式等&lt;/p&gt;</div><div class="line">&lt;ul&gt;</div><div class="line">&lt;li&gt;JavaScript&lt;/li&gt;</div><div class="line">&lt;li&gt;DOM&lt;/li&gt;</div><div class="line">&lt;li&gt;CSS&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p>将HTML代码分解为DOM节点层次图:</p><p><img src="http://img.blog.csdn.net/20171009215827315?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>HTML文档可以说由节点构成的集合，三种常见的DOM节点:</p><ol><li><p>元素节点：上图中<code>&lt;html&gt;、&lt;body&gt;、&lt;p&gt;</code>等都是元素节点，即标签。</p></li><li><p>文本节点:向用户展示的内容，如<code>&lt;li&gt;...&lt;/li&gt;</code>中的JavaScript、DOM、CSS等文本。</p></li><li><p>属性节点:元素属性，如<code>&lt;a&gt;</code>标签的链接属性href=”<a href="http://www.imooc.com&quot;。" target="_blank" rel="external">http://www.imooc.com&quot;。</a></p></li></ol><p>看下面代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;http://www.imooc.com&quot;&gt;JavaScript DOM&lt;/a&gt;</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171009215921046?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="通过ID获取元素"><a href="#通过ID获取元素" class="headerlink" title="通过ID获取元素"></a>通过ID获取元素</h3><p>学过HTML/CSS样式，都知道，网页由标签将信息组织起来，而标签的id属性值是唯一的，就像是每人有一个身份证号一样，只要通过身份证号就可以找到相对应的人。那么在网页中，我们通过id先找到标签，然后进行操作。</p><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.getElementById(“id”)</div></pre></td></tr></table></figure><p>看看下面代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">&lt;title&gt;获取元素&lt;/title&gt;</div><div class="line"></div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p id=&quot;con&quot;&gt;JavaScript&lt;/p&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">var mychar = document.getElementById(&quot;con&quot;);</div><div class="line">document.write(&quot;结果：&quot;+mychar);</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p>结果:null或[object HTMLParagraphElement]</p><p><strong>注:获取的元素是一个对象，如想对元素进行操作，我们要通过它的属性或方法。</strong></p><h3 id="innerHTML-属性"><a href="#innerHTML-属性" class="headerlink" title="innerHTML 属性"></a>innerHTML 属性</h3><p>innerHTML 属性用于获取或替换 HTML 元素的内容。</p><p>语法:</p><pre><code>Object.innerHTML</code></pre><p>注意:</p><pre><code>1.Object是获取的元素对象，如通过document.getElementById(&quot;ID&quot;)获取的元素。2.注意书写，innerHTML区分大小写。</code></pre><p>我们通过id=”con”获取<code>&lt;p&gt;</code> 元素，并将元素的内容输出和改变元素内容，代码如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;title&gt;innerHTML&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p id=&quot;con&quot;&gt;Hello World!&lt;/p&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">var mycon = document.getElementById(&quot;con&quot;);</div><div class="line">document.write(&quot;p标签原始内容：&quot;+mycon.innerHTML+&quot;&lt;br&gt;&quot;)</div><div class="line">// 输入元素内容</div><div class="line">mycon.innerHTML=&quot;New text!&quot;;</div><div class="line">document.write(&quot;p标签修改后内容：&quot;+mycon.innerHTML);</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><h3 id="改变-HTML-样式"><a href="#改变-HTML-样式" class="headerlink" title="改变 HTML 样式"></a>改变 HTML 样式</h3><p>HTML DOM 允许 JavaScript 改变 HTML 元素的样式。如何改变 HTML 元素的样式呢？</p><p>语法:</p><pre><code>Object.style.property=new style;</code></pre><p><strong>注意:Object是获取的元素对象，如通过document.getElementById(“id”)获取的元素。</strong></p><p>看看下面的代码:</p><pre><code>改变 &lt;p&gt; 元素的样式，将颜色改为红色，字号改为20,背景颜色改为蓝：</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;pcon&quot;&gt;Hello World!&lt;/p&gt;</div><div class="line">&lt;script&gt;</div><div class="line">   var mychar = document.getElementById(&quot;pcon&quot;);</div><div class="line">   mychar.style.color=&quot;red&quot;;</div><div class="line">   mychar.style.fontSize=&quot;20&quot;;</div><div class="line">   mychar.style.backgroundColor =&quot;blue&quot;;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><h3 id="显示和隐藏（display属性）"><a href="#显示和隐藏（display属性）" class="headerlink" title="显示和隐藏（display属性）"></a>显示和隐藏（display属性）</h3><pre><code>网页中经常会看到显示和隐藏的效果，可通过display属性来设置。</code></pre><p>语法：</p><pre><code>Object.style.display = value</code></pre><p><strong>注意:Object是获取的元素对象，如通过document.getElementById(“id”)获取的元素。</strong></p><p>value取值:</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>此元素不会被显示，即隐藏</td></tr><tr><td>block</td><td>此元素将显示为块级元素</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;title&gt;display&lt;/title&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">function hidetext()&#123;</div><div class="line">var mychar = document.getElementById(&quot;con&quot;);</div><div class="line">mychar.style.display=&quot;none&quot;;</div><div class="line">&#125;</div><div class="line">function showtext()&#123;</div><div class="line">var mychar = document.getElementById(&quot;con&quot;);</div><div class="line">mychar.style.display=&quot;block&quot;;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;h1&gt;JavaScript&lt;/h1&gt;</div><div class="line">&lt;p id=&quot;con&quot;&gt;作为一个web开发师来说，如果你想提供漂亮的网页，令用户满意的上网体验，JavaScript是必不可少的工具&lt;/p&gt;</div><div class="line">&lt;form&gt;</div><div class="line">&lt;input type=&quot;button&quot; onclick=&quot;hidetext()&quot; value=&quot;隐藏内容&quot;&gt;</div><div class="line">&lt;input type=&quot;button&quot; onclick=&quot;showtext()&quot; value=&quot;显示内容&quot;&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><h3 id="控制类名（className-属性）"><a href="#控制类名（className-属性）" class="headerlink" title="控制类名（className 属性）"></a>控制类名（className 属性）</h3><p>className 属性设置或返回元素的class 属性。</p><p>语法：</p><pre><code>object.className = classname</code></pre><p>作用:</p><pre><code>1.获取元素的class 属性2. 为网页内的某个元素指定一个css样式来更改该元素的外观</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;title&gt;className属性&lt;/title&gt;</div><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">input&#123;</div><div class="line">font-size: 10px;</div><div class="line">&#125;</div><div class="line">.one&#123;</div><div class="line">width: 200px;</div><div class="line">background-color: #CCC;</div><div class="line">&#125;</div><div class="line">.two&#123;</div><div class="line">font-size: 18px;</div><div class="line">color: #F00;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;p id=&quot;con&quot; class=&quot;one&quot;&gt;JavaScript&lt;/p&gt;</div><div class="line">&lt;form&gt;</div><div class="line">&lt;input type=&quot;button&quot; value=&quot;点击更改&quot; onclick=&quot;modifyclass()&quot;&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">var mychar = document.getElementById(&quot;con&quot;);</div><div class="line">document.write(&quot;p元素Class值为：&quot;+mychar.className+&quot;&lt;br&gt;&quot;);</div><div class="line">function modifyclass()&#123;</div><div class="line">mychar.className = &quot;two&quot;;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;javascript介绍&quot;&gt;&lt;a href=&quot;#javascript介绍&quot; class=&quot;headerlink&quot; title=&quot;javascript介绍&quot;&gt;&lt;/a&gt;javascript介绍&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;JavaScript代码写在`&amp;lt;scr
      
    
    </summary>
    
      <category term="JavaScript学习" scheme="http://wustxiao.cn/categories/JavaScript%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JavaScript" scheme="http://wustxiao.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫与信息提取(三)：网络爬虫之实战</title>
    <link href="http://wustxiao.cn/2017/10/09/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B8%8E%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96-%E4%B8%89-%EF%BC%9A%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E5%AE%9E%E6%88%98/"/>
    <id>http://wustxiao.cn/2017/10/09/Python网络爬虫与信息提取-三-：网络爬虫之实战/</id>
    <published>2017-10-09T11:30:11.000Z</published>
    <updated>2017-10-09T11:31:02.501Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Re(正则表达式)库入门</strong></p><pre><code>regular expression = regex = RE是一种通用的字符串表达框架,用来简洁表达一组字符串的表达式,也可用来判断某字符串的特征归属</code></pre><p><strong>正则表达式的语法</strong><br><img src="http://img.blog.csdn.net/20171003172550881?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>常用操作符</strong><br><img src="http://img.blog.csdn.net/20171003172903007?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>实例</strong><br><img src="http://img.blog.csdn.net/20171003173123271?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20171003173148932?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>Re库的基本使用</strong></p><ul><li>正则表达式的表示类型为raw string类型(原生字符串类型),表示为r’text’</li><li><p>Re库主要功能函数<br><img src="http://img.blog.csdn.net/20171003173600313?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p></li><li><p>功能函数</p></li><li><strong>re.search(pattern,string,flags=0)</strong></li></ul><p><img src="http://img.blog.csdn.net/20171003174502422?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20171003175004492?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><p><strong>re.match(pattern,string,flags=0)</strong></p><p> 因为match为从开始位置开始匹配,使用时要加if进行判别返回结果是否为空,否则会报错</p></li></ul><p><img src="http://img.blog.csdn.net/20171003174827459?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><strong>re.findall(pattern,string,flags=0)</strong><br><img src="http://img.blog.csdn.net/20171003175333187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></li><li><p><strong>re.split(pattern,string,maxsplit=0,flags=0)</strong></p><pre><code>maxsplit为最大分割数,剩余部分作为最后一个元素输出</code></pre></li></ul><p><img src="http://img.blog.csdn.net/20171003175818527?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><strong>re.finditer(pattern,string,flags=0)</strong></li></ul><p><img src="http://img.blog.csdn.net/20171003180036474?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><p><strong>re.sub(pattern,repl,string,count=0,flags=0)</strong></p><pre><code>repl是用来替换的字符串,count为替换次数</code></pre></li></ul><p><img src="http://img.blog.csdn.net/20171003180256096?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li><strong>Re库的另一种等价用法</strong></li></ul><p>Re库的函数式用法为一次性操作,还有一种为面向对象用法,可在编译后多次操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">regex = re.compile(pattern,flags=0)</div></pre></td></tr></table></figure><p><strong>通过compile生成的regex对象才能被叫做正则表达式</strong><br><img src="http://img.blog.csdn.net/20171003180754812?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>Match对象的属性</strong></p><p><img src="http://img.blog.csdn.net/20171003212506588?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>Match对象的方法</strong></p><p><img src="http://img.blog.csdn.net/20171003212601752?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>例子</strong></p><p><img src="http://img.blog.csdn.net/20171003212745305?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><pre><code>Re库的贪婪匹配和最小匹配Re库默认采取贪婪匹配,即输出匹配最长的子串</code></pre><p><img src="http://img.blog.csdn.net/20171003212936289?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>实例二:淘宝商品比价定向爬虫(requests-re)</strong></p><pre><code>步骤1:提交商品搜索请求,循环获取页面步骤2:对于每个页面,提取商品名称和价格信息步骤3:将信息输出显示</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import re</div><div class="line"></div><div class="line">def getHTMLText(url):</div><div class="line">    try:</div><div class="line">        r = requests.get(url, timeout=30)</div><div class="line">        r.raise_for_status()</div><div class="line">        r.encoding = r.apparent_encoding</div><div class="line">        return r.text</div><div class="line">    except:</div><div class="line">        return &quot;&quot;</div><div class="line"></div><div class="line">def parsePage(ilt, html):</div><div class="line">    try:</div><div class="line">        plt = re.findall(r&apos;\&quot;view_price\&quot;\:\&quot;[\d\.]*\&quot;&apos;,html)</div><div class="line">        tlt = re.findall(r&apos;\&quot;raw_title\&quot;\:\&quot;.*?\&quot;&apos;,html)</div><div class="line">        for i in range(len(plt)):</div><div class="line">            price = eval(plt[i].split(&apos;:&apos;)[1])</div><div class="line">            title = eval(tlt[i].split(&apos;:&apos;)[1])</div><div class="line">            ilt.append([price , title])</div><div class="line">    except:</div><div class="line">        print(&quot;&quot;)</div><div class="line"></div><div class="line">def printGoodsList(ilt):</div><div class="line">    tplt = &quot;&#123;:4&#125;\t&#123;:8&#125;\t&#123;:16&#125;&quot;</div><div class="line">    print(tplt.format(&quot;序号&quot;, &quot;价格&quot;, &quot;商品名称&quot;))</div><div class="line">    count = 0</div><div class="line">    for g in ilt:</div><div class="line">        count = count + 1</div><div class="line">        print(tplt.format(count, g[0], g[1]))</div><div class="line"></div><div class="line">def main():</div><div class="line">    goods = &apos;书包&apos;</div><div class="line">    depth = 3</div><div class="line">    start_url = &apos;https://s.taobao.com/search?q=&apos; + goods</div><div class="line">    infoList = []</div><div class="line">    for i in range(depth):</div><div class="line">        try:</div><div class="line">            url = start_url + &apos;&amp;s=&apos; + str(44*i)</div><div class="line">            html = getHTMLText(url)</div><div class="line">            parsePage(infoList, html)</div><div class="line">        except:</div><div class="line">            continue</div><div class="line">    printGoodsList(infoList)</div><div class="line"></div><div class="line">main()</div></pre></td></tr></table></figure><p><strong>实例三:股票数据定向爬虫</strong></p><pre><code>步骤1:从东方财富网获取股票列表步骤2:根据股票列表逐个到百度股票获取个股信息步骤3:将结果存储到文件</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">#CrawBaiduStocksB.py</div><div class="line">import requests</div><div class="line">from bs4 import BeautifulSoup</div><div class="line">import traceback</div><div class="line">import re</div><div class="line"></div><div class="line">def getHTMLText(url, code=&quot;utf-8&quot;):</div><div class="line">    try:</div><div class="line">        r = requests.get(url)</div><div class="line">        r.raise_for_status()</div><div class="line">        r.encoding = code</div><div class="line">        return r.text</div><div class="line">    except:</div><div class="line">        return &quot;&quot;</div><div class="line"></div><div class="line">def getStockList(lst, stockURL):</div><div class="line">    html = getHTMLText(stockURL, &quot;GB2312&quot;)</div><div class="line">    soup = BeautifulSoup(html, &apos;html.parser&apos;)</div><div class="line">    a = soup.find_all(&apos;a&apos;)</div><div class="line">    for i in a:</div><div class="line">        try:</div><div class="line">            href = i.attrs[&apos;href&apos;]</div><div class="line">            lst.append(re.findall(r&quot;[s][hz]\d&#123;6&#125;&quot;, href)[0])</div><div class="line">        except:</div><div class="line">            continue</div><div class="line"></div><div class="line">def getStockInfo(lst, stockURL, fpath):</div><div class="line">    count = 0</div><div class="line">    for stock in lst:</div><div class="line">        url = stockURL + stock + &quot;.html&quot;</div><div class="line">        html = getHTMLText(url)</div><div class="line">        try:</div><div class="line">            if html==&quot;&quot;:</div><div class="line">                continue</div><div class="line">            infoDict = &#123;&#125;</div><div class="line">            soup = BeautifulSoup(html, &apos;html.parser&apos;)</div><div class="line">            stockInfo = soup.find(&apos;div&apos;,attrs=&#123;&apos;class&apos;:&apos;stock-bets&apos;&#125;)</div><div class="line"></div><div class="line">            name = stockInfo.find_all(attrs=&#123;&apos;class&apos;:&apos;bets-name&apos;&#125;)[0]</div><div class="line">            infoDict.update(&#123;&apos;股票名称&apos;: name.text.split()[0]&#125;)</div><div class="line"></div><div class="line">            keyList = stockInfo.find_all(&apos;dt&apos;)</div><div class="line">            valueList = stockInfo.find_all(&apos;dd&apos;)</div><div class="line">            for i in range(len(keyList)):</div><div class="line">                key = keyList[i].text</div><div class="line">                val = valueList[i].text</div><div class="line">                infoDict[key] = val</div><div class="line"></div><div class="line">            with open(fpath, &apos;a&apos;, encoding=&apos;utf-8&apos;) as f:</div><div class="line">                f.write( str(infoDict) + &apos;\n&apos; )</div><div class="line">                count = count + 1</div><div class="line">                print(&quot;\r当前进度: &#123;:.2f&#125;%&quot;.format(count*100/len(lst)),end=&quot;&quot;)</div><div class="line">        except:</div><div class="line">            count = count + 1</div><div class="line">            print(&quot;\r当前进度: &#123;:.2f&#125;%&quot;.format(count*100/len(lst)),end=&quot;&quot;)</div><div class="line">            continue</div><div class="line"></div><div class="line">def main():</div><div class="line">    stock_list_url = &apos;http://quote.eastmoney.com/stocklist.html&apos;</div><div class="line">    stock_info_url = &apos;https://gupiao.baidu.com/stock/&apos;</div><div class="line">    output_file = &apos;D:/BaiduStockInfo.txt&apos;</div><div class="line">    slist=[]</div><div class="line">    getStockList(slist, stock_list_url)</div><div class="line">    getStockInfo(slist, stock_info_url, output_file)</div><div class="line"></div><div class="line">main()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Re(正则表达式)库入门&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;regular expression = regex = RE
是一种通用的字符串表达框架,用来简洁表达一组字符串的表达式,也可用来判断某字符串的特征归属
&lt;/code&gt;&lt;/pre&gt;&lt;
      
    
    </summary>
    
      <category term="Python学习" scheme="http://wustxiao.cn/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://wustxiao.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫与信息提取(二)：网络爬虫之提取</title>
    <link href="http://wustxiao.cn/2017/10/09/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B8%8E%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96-%E4%BA%8C-%EF%BC%9A%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E6%8F%90%E5%8F%96/"/>
    <id>http://wustxiao.cn/2017/10/09/Python网络爬虫与信息提取-二-：网络爬虫之提取/</id>
    <published>2017-10-09T11:28:12.000Z</published>
    <updated>2017-10-09T11:29:23.970Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Beautiful Soup库可对HTML/XML格式进行解析并提取相关信息</strong></p><p>安装:  <code>pip install beautifulsoup4</code></p><p>小测：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; import requests</div><div class="line">&gt;&gt;&gt; r = requests.get(&quot;http://python123.io/ws/demo.html&quot;)</div><div class="line">&gt;&gt;&gt; r.text</div><div class="line">&gt;&gt;&gt; demo = r.text</div><div class="line">&gt;&gt;&gt; from bs4 import BeautifulSoup</div><div class="line">&gt;&gt;&gt; soup = BeautifulSoup(demo,&quot;html.parser&quot;)</div><div class="line">&gt;&gt;&gt; print(soup.prettify())</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171003111747222?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="http://img.blog.csdn.net/20171003111805980?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>Beautiful Soup库是解析/遍历/维护”标签熟”的功能库,引用方式:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">from bs4 import BeautifulSoup</div><div class="line">import bs4</div></pre></td></tr></table></figure><p><strong>Beautiful Soup库的4种解析器:</strong></p><p><img src="http://img.blog.csdn.net/20171003125633014?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>Beautiful Soup类的基本元素:</strong></p><p><img src="http://img.blog.csdn.net/20171003125726046?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>bs类基本元素</strong></p><ul><li><p>Tag标签<br><img src="http://img.blog.csdn.net/20171003130356706?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>任何存在于HTML语法中的标签都可用**soup.<tag>访问获得,存在多个取第一个</tag></p></li><li><p>Tag的name<br><img src="http://img.blog.csdn.net/20171003130504074?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>每个<tag>有自己的名字,通过<tag>.name获取,字符串类型</tag></tag></p></li><li><p>Tag的attrs<br><img src="http://img.blog.csdn.net/20171003130840431?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p></li><li><p>Tag的NavigableString<br><img src="http://img.blog.csdn.net/20171003131039781?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p></li><li><p>Tag的Comment<br><img src="http://img.blog.csdn.net/20171003131409233?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p></li><li><p>由find_all()扩展的七个方法:<br><img src="http://img.blog.csdn.net/20171003132419274?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p></li></ul><p><strong>实例一:中国大学排名爬虫</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># coding=utf-8</div><div class="line">import requests</div><div class="line">from bs4 import BeautifulSoup</div><div class="line">import bs4</div><div class="line"></div><div class="line">def getHTMLText(url):</div><div class="line">    try:</div><div class="line">        r = requests.get(url,timeout=30)</div><div class="line">        r.raise_for_status()</div><div class="line">        r.encoding=r.apparent_encoding</div><div class="line">        return r.text</div><div class="line">    except:</div><div class="line">        return &quot;error&quot;</div><div class="line"></div><div class="line">def fillUnivList(ulist,html):</div><div class="line">    soup=BeautifulSoup(html,&quot;html.parser&quot;)</div><div class="line">    for tr in soup.find(&apos;tbody&apos;).children:</div><div class="line">        if isinstance(tr,bs4.element.Tag):</div><div class="line">            tds = tr(&apos;td&apos;)</div><div class="line">            ulist.append([tds[0].string,tds[1].string,tds[2].string])</div><div class="line"></div><div class="line">def printUnivList(ulist,num):</div><div class="line">    tplt=&quot;&#123;0:^10&#125;\t&#123;1:&#123;3&#125;^10&#125;\t&#123;2:^10&#125;&quot;</div><div class="line">    print(tplt.format(&quot;排名&quot;,&quot;学校名称&quot;,&quot;总分&quot;,chr(12288)))</div><div class="line">    for i in range(num):</div><div class="line">        u=ulist[i]</div><div class="line">        print(tplt.format(u[0],u[1],u[2],chr(12288)))</div><div class="line"></div><div class="line">def main():</div><div class="line">    uinfo=[]</div><div class="line">    url = &quot;http://www.zuihaodaxue.cn/zuihaodaxuepaiming2016.html&quot;</div><div class="line">    html = getHTMLText(url)</div><div class="line">    fillUnivList(uinfo,html)</div><div class="line">    printUnivList(uinfo,20)</div><div class="line">main()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Beautiful Soup库可对HTML/XML格式进行解析并提取相关信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安装:  &lt;code&gt;pip install beautifulsoup4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;小测：&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
      <category term="Python学习" scheme="http://wustxiao.cn/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://wustxiao.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫与信息提取(一)</title>
    <link href="http://wustxiao.cn/2017/10/09/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B8%8E%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96-%E4%B8%80/"/>
    <id>http://wustxiao.cn/2017/10/09/Python网络爬虫与信息提取-一/</id>
    <published>2017-10-09T11:24:30.000Z</published>
    <updated>2017-10-09T11:25:45.988Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Requests库的七个主要方法:</strong></p><p><img src="http://img.blog.csdn.net/20171003091430199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>get方法</strong></p><pre><code>r = requests.get(url):右边构造一个向服务器请求资源的Requests对象,左边返回一个包含服务器资源的Response对象给r完整参数:requests.get(url,params=None,**kwargs),实则由request方法封装</code></pre><p><strong>Response对象的五个属性:</strong></p><p><img src="http://img.blog.csdn.net/20171003091835125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>爬取网页的通用代码框架</strong></p><pre><code>Requests库爬取网页会遇到异常:6种常见异常：</code></pre><p><img src="http://img.blog.csdn.net/20171003092400462?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>使用r.raise_for_status()方法构建通用代码框架:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># coding=utf-8</div><div class="line">def getHTMLText(url)</div><div class="line">try:</div><div class="line">r = request.get(url,timeout = 30)</div><div class="line">r.raise_for_status()</div><div class="line">r.encoding = r.apparent_encoding</div><div class="line">return r.text</div><div class="line">except:</div><div class="line">return &quot;产生异常&quot;</div></pre></td></tr></table></figure><p><strong>HTTP协议对资源的操作:</strong></p><p><img src="http://img.blog.csdn.net/20171003094035525?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>Requests库主要方法:requests.request(method,url,</strong>kwargs)**</p><pre><code>method(请求方式)包括:    GET/HEAD/POST/PUT/PATCH/delete/OPTIONS**kwargs(控制访问参数)包括:    params(添加键值到url后)/data(字典/字节序列等作为Request的内容)/json/headers(HTTP定制头)/cookies(Request中的cookie)/auth(元祖,支持HTTP认证)/files(传输文件)/timeout/proxies(设定访问代理服务器)/allow_redirects(重定向开关)/stream(获取内容立即下载开关)/verify(认证SSL证书开关)/cert(本地SSL证书路径)</code></pre><p><strong>Requests库爬取实例</strong></p><ul><li>京东商品页面的爬取</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">url = &quot;http://item.jd.com/2967929.html&quot;</div><div class="line">try:</div><div class="line">    r=requests.get(url)</div><div class="line">    r.raise_for_status()</div><div class="line">    r.encoding=r.apparent_encoding</div><div class="line">    print(r.text[:1000])</div><div class="line">except:</div><div class="line">    print(&quot;爬取失败&quot;)</div></pre></td></tr></table></figure><ul><li>亚马逊商品页面的爬取<br>由于亚马逊有自身的头部审查,故我们模拟浏览器访问:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">url = &quot;http://www.amazon.cn/gp/product/B01M8L5Z3Y&quot;</div><div class="line">try:</div><div class="line">    kv = &#123;&apos;user-agent&apos;:&apos;Mozilla/5.0&apos;&#125;</div><div class="line">    r= requests.get(url,headers = kv)</div><div class="line">    r.raise_for_status()</div><div class="line">    r.encoding=r.apparent_encoding</div><div class="line">    print(r.text[1000:2000])</div><div class="line">except:</div><div class="line">    print(&quot;爬取失败&quot;)</div></pre></td></tr></table></figure><ul><li>百度/360搜索关键词提交<br>首先我们需要知道搜索关键词的提交接口:<br>百度:<a href="http://www.baidu.com/s?wd=keyword" target="_blank" rel="external">http://www.baidu.com/s?wd=keyword</a><br>360:<a href="http://www.so.com/s?q=keyword" target="_blank" rel="external">http://www.so.com/s?q=keyword</a><br>接下来我们可以利用params参数将关键词加入,代码如下:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">keyword = &quot;Python&quot;</div><div class="line">try:</div><div class="line">    kv = &#123;&apos;wd&apos;:keyword&#125;</div><div class="line">    r= requests.get(&quot;http://www.baidu.com/s&quot;,params = kv)</div><div class="line">    print(r.request.url)</div><div class="line">    r.raise_for_status()</div><div class="line">    print(len(r.text))</div><div class="line">except:</div><div class="line">    print(&quot;爬取失败&quot;)</div></pre></td></tr></table></figure><ul><li>网络图片的爬取和存储</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># coding=utf-8</div><div class="line">import requests</div><div class="line">import os</div><div class="line">url = &quot;http://image.nationalgeographic.com.cn/2017/0311/20170311024522382.jpg&quot;</div><div class="line"></div><div class="line">root = &quot;/home/xiaorui/文档/Python/&quot;</div><div class="line">path = root +url.split(&apos;/&apos;)[-1]</div><div class="line">try:</div><div class="line">    if not os.path.exists(root):</div><div class="line">        os.mkdir(root)</div><div class="line">    if not os.path.exists(path):</div><div class="line">        r=requests.get(url)</div><div class="line">        with open(path,&apos;wb&apos;) as f:</div><div class="line">            f.write(r.content)</div><div class="line">            f.close()</div><div class="line">            print(&quot;文件保存成功&quot;)</div><div class="line">    else:</div><div class="line">        print(&quot;文件已存在&quot;)</div><div class="line">except:</div><div class="line">    print(&quot;爬取失败&quot;)</div></pre></td></tr></table></figure><ul><li>IP地址归属地的查询</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># coding=utf-8</div><div class="line">import requests</div><div class="line">url = &quot;http://m.ip138.com/ip.asp?ip=&quot;</div><div class="line">try:</div><div class="line">    r=requests.get(url+&apos;202.204.80.112&apos;)</div><div class="line">    r.raise_for_status()</div><div class="line">    r.encoding=r.apparent_encoding</div><div class="line">    print(r.text[-500:])</div><div class="line">except:</div><div class="line">    print(&quot;爬取失败&quot;)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Requests库的七个主要方法:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171003091430199?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZ
      
    
    </summary>
    
      <category term="Python学习" scheme="http://wustxiao.cn/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://wustxiao.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>markdown新手指南手册</title>
    <link href="http://wustxiao.cn/2017/10/09/markdown%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97%E6%89%8B%E5%86%8C/"/>
    <id>http://wustxiao.cn/2017/10/09/markdown新手指南手册/</id>
    <published>2017-10-09T10:48:18.000Z</published>
    <updated>2017-10-09T11:15:54.030Z</updated>
    
    <content type="html"><![CDATA[<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 一级标题</div><div class="line">## 二级标题</div><div class="line">### 三级标题</div><div class="line">#### 四级标题</div><div class="line">##### 五级标题</div><div class="line">###### 六级标题</div></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- 文本1</div><div class="line">- 文本2</div><div class="line">- 文本3</div></pre></td></tr></table></figure><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. 文本1</div><div class="line">2. 文本2</div><div class="line">3. 文本3</div></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[显示文本](链接地址)</div></pre></td></tr></table></figure><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](图片链接地址)</div></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; 需要引用的文本</div></pre></td></tr></table></figure><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">**文本**</div></pre></td></tr></table></figure><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*文本*</div></pre></td></tr></table></figure><h3 id="代码引用"><a href="#代码引用" class="headerlink" title="代码引用"></a>代码引用</h3><p>用两个、、、包围需要引用的代码即可</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">|Tables     |Are         |Cool   |</div><div class="line">|-----------------|:-----------|----|</div><div class="line">|col 3 is   |right-aligned | $1600  |</div><div class="line">|col 2 is   |centered    |  $12  |</div><div class="line">|zebra stripes  | are neat     | $1 |</div></pre></td></tr></table></figure><p><strong>显示效果：</strong></p><table><thead><tr><th>Tables</th><th style="text-align:left">Are</th><th>Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:left">right-aligned</td><td>$1600</td></tr><tr><td>col 2 is</td><td style="text-align:left">centered</td><td>$12</td></tr><tr><td>zebra stripes</td><td style="text-align:left">are neat</td><td>$1</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
      
    
    </summary>
    
      <category term="Linux学习" scheme="http://wustxiao.cn/categories/Linux%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="markdown" scheme="http://wustxiao.cn/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next主题 文章添加阅读次数，访问量等</title>
    <link href="http://wustxiao.cn/2017/10/06/Hexo-Next%E4%B8%BB%E9%A2%98-%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0%EF%BC%8C%E8%AE%BF%E9%97%AE%E9%87%8F%E7%AD%89/"/>
    <id>http://wustxiao.cn/2017/10/06/Hexo-Next主题-文章添加阅读次数，访问量等/</id>
    <published>2017-10-06T09:38:07.000Z</published>
    <updated>2017-10-06T09:40:09.672Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本章所讲给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。效果如下图所示："><a href="#本章所讲给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。效果如下图所示：" class="headerlink" title="本章所讲给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。效果如下图所示："></a>本章所讲给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。效果如下图所示：</h3><p><img src="http://img.blog.csdn.net/20171006173642716?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="打开-Hexo-目录下的-themes-next-config-yml-文件"><a href="#打开-Hexo-目录下的-themes-next-config-yml-文件" class="headerlink" title="打开 Hexo 目录下的 \themes\next\ _config.yml 文件"></a>打开 Hexo 目录下的 \themes\next\ _config.yml 文件</h3><p><img src="http://img.blog.csdn.net/20171006173704062?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;本章所讲给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。效果如下图所示：&quot;&gt;&lt;a href=&quot;#本章所讲给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。效果如下图所示：&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
      <category term="Hexo学习" scheme="http://wustxiao.cn/categories/Hexo%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="hexo" scheme="http://wustxiao.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>markdown 编辑器： remarkable 安装(ubuntu)</title>
    <link href="http://wustxiao.cn/2017/10/06/markdown-%E7%BC%96%E8%BE%91%E5%99%A8%EF%BC%9A-remarkable-%E5%AE%89%E8%A3%85-ubuntu/"/>
    <id>http://wustxiao.cn/2017/10/06/markdown-编辑器：-remarkable-安装-ubuntu/</id>
    <published>2017-10-06T08:49:00.000Z</published>
    <updated>2017-10-06T09:02:27.427Z</updated>
    
    <content type="html"><![CDATA[<ul><li>下载安装包</li><li><a href="http://remarkableapp.github.io/linux/download.html" target="_blank" rel="external">http://remarkableapp.github.io/linux/download.html</a></li></ul><ul><li>安装之：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dpkg -i remarkable_1.62_all.deb</div></pre></td></tr></table></figure><ul><li>补上依赖项：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -f</div></pre></td></tr></table></figure><ul><li>运行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">remarkable &amp;</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171006170128354?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;下载安装包&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://remarkableapp.github.io/linux/download.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://remarkableapp.git
      
    
    </summary>
    
      <category term="安装软件" scheme="http://wustxiao.cn/categories/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="软件" scheme="http://wustxiao.cn/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建（next主题系列详解）</title>
    <link href="http://wustxiao.cn/2017/10/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%88next%E4%B8%BB%E9%A2%98%E7%B3%BB%E5%88%97%E8%AF%A6%E8%A7%A3%EF%BC%89/"/>
    <id>http://wustxiao.cn/2017/10/06/Hexo博客搭建（next主题系列详解）/</id>
    <published>2017-10-06T07:34:50.000Z</published>
    <updated>2017-10-06T07:36:02.190Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo的next主题配置详解"><a href="#hexo的next主题配置详解" class="headerlink" title="hexo的next主题配置详解"></a><a href="http://michael728.github.io/2015/11/30/hexo-next-optimize/" target="_blank" rel="external">hexo的next主题配置详解</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;hexo的next主题配置详解&quot;&gt;&lt;a href=&quot;#hexo的next主题配置详解&quot; class=&quot;headerlink&quot; title=&quot;hexo的next主题配置详解&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://michael728.github.io/2015
      
    
    </summary>
    
      <category term="Hexo学习" scheme="http://wustxiao.cn/categories/Hexo%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Hexo" scheme="http://wustxiao.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wustxiao.cn/2017/10/05/hello-world/"/>
    <id>http://wustxiao.cn/2017/10/05/hello-world/</id>
    <published>2017-10-05T15:22:50.669Z</published>
    <updated>2017-10-05T15:22:50.669Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p><p><div id="disqus_thread"></div></p><script>/***  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*//*var disqus_config = function () {this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variablethis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable};*/(function() { // DON'T EDIT BELOW THIS LINEvar d = document, s = d.createElement('script');s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js';s.setAttribute('data-timestamp', +new Date());(d.head || d.body).appendChild(s);})();</script><noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" target="_blank" rel="external">comments powered by Disqus.</a></noscript><script id="dsq-count-scr" src="//https-xrlrf-github-io.disqus.com/count.js" async></script><!-- Global Site Tag (gtag.js) - Google Analytics --><script async src="https://www.googletagmanager.com/gtag/js?id=UA-107582762-1"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-107582762-1');</script><!-- UY BEGIN --><p><div id="uyan_frame"></div></p><p><script type="text/javascript" src="http://v2.uyan.cc/code/uyan.js?uid=2145975"></script><br><!-- UY END --></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客使用系列（四）——文章里嵌入音乐播放器</title>
    <link href="http://wustxiao.cn/2017/10/05/Hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E7%B3%BB%E5%88%97%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94%E6%96%87%E7%AB%A0%E9%87%8C%E5%B5%8C%E5%85%A5%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>http://wustxiao.cn/2017/10/05/Hexo博客使用系列（四）——文章里嵌入音乐播放器/</id>
    <published>2017-10-05T15:04:39.000Z</published>
    <updated>2017-10-05T15:24:35.880Z</updated>
    
    <content type="html"><![CDATA[<p><strong>内嵌播放器</strong></p><p>打开网页版网易云<br>选择自己喜欢的音乐或歌单，点开歌曲名或者歌单名，点击生成外链播放器，赋值html代码，将html代码无需任何修改放入<br>markdown文章就可以了。可以取消自动播放。</p><p><img src="http://img.blog.csdn.net/20171005231522473?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveHI0Njk3ODY3MDY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="//music.163.com/outchain/player?type=0&id=786956365&auto=1&height=430"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;内嵌播放器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开网页版网易云&lt;br&gt;选择自己喜欢的音乐或歌单，点开歌曲名或者歌单名，点击生成外链播放器，赋值html代码，将html代码无需任何修改放入&lt;br&gt;markdown文章就可以了。可以取消自动播放。&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
      <category term="hexo学习" scheme="http://wustxiao.cn/categories/hexo%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="hexo" scheme="http://wustxiao.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Python/Django生成二维码</title>
    <link href="http://wustxiao.cn/2017/10/05/Python%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    <id>http://wustxiao.cn/2017/10/05/Python生成二维码/</id>
    <published>2017-10-05T11:00:00.000Z</published>
    <updated>2017-10-05T15:24:09.545Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><h3 id="1-1-用Python来生成二维码很简单，可以看-qrcode-这个包："><a href="#1-1-用Python来生成二维码很简单，可以看-qrcode-这个包：" class="headerlink" title="1.1 用Python来生成二维码很简单，可以看 qrcode 这个包："></a>1.1 用Python来生成二维码很简单，可以看 qrcode 这个包：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install qrcode</div></pre></td></tr></table></figure><p>qrcode 依赖 Image 这个包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install Image</div></pre></td></tr></table></figure><h3 id="1-2-安装后就可以使用了，这个程序带了一个-qr-命令："><a href="#1-2-安装后就可以使用了，这个程序带了一个-qr-命令：" class="headerlink" title="1.2 安装后就可以使用了，这个程序带了一个 qr 命令："></a>1.2 安装后就可以使用了，这个程序带了一个 qr 命令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qr &apos;http://www.ziqiangxuetang.com&apos; &gt; test.png</div></pre></td></tr></table></figure><h3 id="1-3-下面我们看一下如何在-代码-中使用"><a href="#1-3-下面我们看一下如何在-代码-中使用" class="headerlink" title="1.3 下面我们看一下如何在 代码 中使用"></a>1.3 下面我们看一下如何在 代码 中使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">import qrcode</div><div class="line"></div><div class="line">img = qrcode.make(&apos;http://www.tuweizhong.com&apos;)</div><div class="line"># img &lt;qrcode.image.pil.PilImage object at 0x1044ed9d0&gt;</div><div class="line"></div><div class="line">with open(&apos;test.png&apos;, &apos;wb&apos;) as f:</div><div class="line">    img.save(f)</div></pre></td></tr></table></figure><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install git+git://github.com/ojii/pymaging.git#egg=pymaging</div><div class="line">pip install git+git://github.com/ojii/pymaging-png.git#egg=pymaging-png</div></pre></td></tr></table></figure><p>使用方法大致相同，命令行上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qr --factory=pymaging &quot;Some text&quot; &gt; test.png</div></pre></td></tr></table></figure><p>Python中调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import qrcode</div><div class="line">from qrcode.image.pure import PymagingImage</div><div class="line">img = qrcode.make(&apos;Some data here&apos;, image_factory=PymagingImage)</div></pre></td></tr></table></figure><p><div id="disqus_thread"></div></p><script>/***  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*//*var disqus_config = function () {this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variablethis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable};*/(function() { // DON'T EDIT BELOW THIS LINEvar d = document, s = d.createElement('script');s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js';s.setAttribute('data-timestamp', +new Date());(d.head || d.body).appendChild(s);})();</script><noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" target="_blank" rel="external">comments powered by Disqus.</a></noscript><script id="dsq-count-scr" src="//https-xrlrf-github-io.disqus.com/count.js" async></script><!-- Global Site Tag (gtag.js) - Google Analytics --><script async src="https://www.googletagmanager.com/gtag/js?id=UA-107582762-1"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-107582762-1');</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;开始安装&quot;&gt;&lt;a href=&quot;#开始安装&quot; class=&quot;headerlink&quot; title=&quot;开始安装&quot;&gt;&lt;/a&gt;开始安装&lt;/h2&gt;&lt;h3 id=&quot;1-1-用Python来生成二维码很简单，可以看-qrcode-这个包：&quot;&gt;&lt;a href=&quot;#1-1-用Pyth
      
    
    </summary>
    
      <category term="Python学习" scheme="http://wustxiao.cn/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://wustxiao.cn/tags/Python/"/>
    
  </entry>
  
</feed>
