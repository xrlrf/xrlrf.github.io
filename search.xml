<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[相对定位与绝对定位的区别]]></title>
    <url>%2F2017%2F10%2F10%2F%E7%9B%B8%E5%AF%B9%E5%AE%9A%E4%BD%8D%E4%B8%8E%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[你对CSS相对定位和绝对定位区别是否了解，这里和大家分享一下，CSS绝对定位使元素的位置与文档流无关，因此不占据空间。这一点与CSS相对定位不同，CSS相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。 CSS相对定位和绝对定位区别CSS相对定位 CSS相对定位是一个非常容易掌握的概念。如果对一个元素进行CSS相对定位，它将出现在它所在的位置上。然后，可以通过设置垂直或水平位置，让这个元素“相对于”它的起点进行移动。 如果将top设置为20px，那么框将在原位置顶部下面20像素的地方。如果left设置为30像素，那么会在元素左边创建30像素的空间，也就是将元素向右移动。 12345#box_relative&#123; position:relative; left:30px; top:20px; &#125; 如下图所示： CSS相对定位 注意，在使用CSS相对定位时，无论是否进行移动，元素仍然占据原来的空间。因此，移动元素会导致它覆盖其它框。 设置为CSS绝对定位的元素框从文档流完全删除，并相对于其包含块定位，包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像该元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。 CSS绝对定位 CSS绝对定位使元素的位置与文档流无关，因此不占据空间。这一点与CSS相对定位不同，CSS相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。 普通流中其它元素的布局就像CSS绝对定位的元素不存在一样： 12345#box_relative&#123; position:absolute; left:30px; top:20px; &#125; 如下图所示： CSS绝对定位 CSS绝对定位的元素的位置相对于最近的已定位祖先元素，如果元素没有已定位的祖先元素，那么它的位置相对于最初的包含块。 对于定位的主要问题是要记住每种定位的意义。所以，现在让我们复习一下学过的知识吧：CSS相对定位是“相对于”元素在文档中的初始位置，而CSS绝对定位是“相对于”最近的已定位祖先元素，如果不存在已定位的祖先元素，那么“相对于”最初的包含块。 提示：因为CSS绝对定位的框与文档流无关，所以它们可以覆盖页面上的其它元素。可以通过设置z-index属性来控制这些框的堆放次序。 /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F10%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
  </entry>
  <entry>
    <title><![CDATA[前端基本布局]]></title>
    <url>%2F2017%2F10%2F10%2F%E5%89%8D%E7%AB%AF%E5%9F%BA%E6%9C%AC%E5%B8%83%E5%B1%80%2F</url>
    <content type="text"><![CDATA[两列布局12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;两列布局&lt;/title&gt; &lt;style type="text/css"&gt; *&#123; margin: 0px; padding: 0px; border: 0px; &#125; body,html&#123; width:100%; &#125; #zuo&#123; width: 400px; height: 600px; background-color: #960; float: left; &#125; #you&#123; height: 600px; background-color: #0FC; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id="zuo"&gt;&lt;/div&gt; &lt;div id="you"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 效果图为： 两列自适应居中123456789101112131415161718192021222324252627282930313233&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;两列自适应居中&lt;/title&gt; &lt;style type="text/css"&gt; *&#123; margin: 0px; padding: 0px; border: 0px; &#125; body,html&#123; width:100%; &#125; #zuo&#123; width: 30%; height: 600px; background-color: #960; float: left; &#125; #you&#123; width: 70%; height: 600px; background-color: #0FC; float: left; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id="zuo"&gt;&lt;/div&gt; &lt;div id="you"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 效果图为： 三列布局中间自适应123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;三列布局中间自适应&lt;/title&gt; &lt;style type="text/css"&gt; *&#123; margin: 0px; padding: 0px; border: 0px; &#125; html,body&#123; height: 100%; width: 100%; &#125; #zuo&#123; width: 200px; height: 100%; background-color: #960; position: absolute; top: 0px; left: 0px; &#125; #you&#123; width: 200px; height: 100%; background-color: #960; position: absolute; top: 0px; right: 0px; &#125; #ong&#123; height: 100%; background-color: #0FC; margin-left: 200px; margin-right: 200px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id="zuo"&gt;&lt;/div&gt; &lt;div id="ong"&gt;&lt;/div&gt; &lt;div id="you"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 效果图为： 复杂页面排版1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;复杂页面排版&lt;/title&gt; &lt;style type="text/css"&gt; *&#123; margin: 0px; padding: 0px; border: 0px; &#125; #box&#123; height: 1330px; width: 950px; margin: auto; &#125; #hen&#123; height: 245px; width: 950px; background-color: #963; &#125; #zuo&#123; height: 915px; width: 386px; margin-top: 10px; margin-bottom: 10px; background-color: #C30; float: left; &#125; #xia1&#123; height: 540px; width: 272px; margin-top: 10px; margin-left: 10px; background-color: #099; float: left; &#125; #xia2&#123; height: 540px; width: 272px; margin-top: 10px; margin-left: 10px; background-color: #099; float: left; &#125; #xia3&#123; height: 365px; width: 554px; margin-top: 10px; background-color: #C66; float: right; &#125; #dib&#123; height: 150px; width: 950px; margin-top: 10px; background-color: #639; clear: both &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id="box"&gt; &lt;div id="hen"&gt;&lt;/div&gt; &lt;div id="zuo"&gt;&lt;/div&gt; &lt;div id="xia1"&gt;&lt;/div&gt; &lt;div id="xia2"&gt;&lt;/div&gt; &lt;div id="xia3"&gt;&lt;/div&gt; &lt;div id="dib"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 效果图为： /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
  </entry>
  <entry>
    <title><![CDATA[JavaScript入门篇]]></title>
    <url>%2F2017%2F10%2F09%2FJavaScript%E5%85%A5%E9%97%A8%E7%AF%87%2F</url>
    <content type="text"><![CDATA[javascript介绍JavaScript代码写在`&lt;script&gt;&lt;/script&gt;`之间。`&lt;script type=&quot;text/javascript&quot;&gt;表示在&lt;script&gt;&lt;/script&gt;`之间的是文本类型(text),javascript是为了告诉浏览器里面的文本是属于JavaScript语言。 JS文件放在哪？ 放在&lt;body&gt;&lt;/body&gt;内部引用 放在&lt;head&gt;&lt;/head&gt;内部引用 单独写一个js文件存放，需要在哪个地方引用就在哪个地方用`引用 我们可以把HTML文件和JS代码分开,并单独创建一个JavaScript文件(简称JS文件),其文件后缀通常为.js，然后将JS代码直接写在JS文件中。 注意:在JS文件中，不需要&lt;script&gt;标签,直接编写JavaScript代码就可以了。 JS文件不能直接运行，需嵌入到HTML文件中执行，我们需在HTML中添加如下代码，就可将JS文件嵌入HTML文件中。 1&lt;script src="script.js"&gt;&lt;/script&gt; 放在&lt;head&gt;部分 最常用的方式是在页面中head部分放置&lt;script&gt;元素，浏览器解析head部分就会执行这个代码，然后才解析页面的其余部分。 放在&lt;body&gt;部分 JavaScript代码在网页读取到该语句的时候就会执行。 注意: javascript作为一种脚本语言可以放在html页面中任何位置，但是浏览器解释html时是按先后顺序的，所以前面的script就先被执行。比如进行页面显示初始化的js必须放在head里面，因为初始化都要求提前进行（如给页面body设置css等）；而如果是通过事件调用执行的function那么对位置没什么要求的。 变量变量名可以任意取名，但要遵循命名规则: 1.变量必须使用字母、下划线(_)或者美元符($)开始。 2.然后可以使用任意多个英文字母、数字、下划线(_)或者美元符($)组成。 3.不能使用JavaScript关键词与JavaScript保留字。 变量要先声明再赋值，如下： 123var mychar;mychar="javascript";var mynum = 6; 变量可以重复赋值，如下： 123var mychar;mychar="javascript";mychar="hello"; 注意: 在JS中区分大小写，如变量mychar与myChar是不一样的，表示是两个变量。 变量虽然也可以不声明，直接使用，但不规范，需要先声明，后使用。 if else判断语句语法: 1234if(条件)&#123; 条件成立时执行的代码 &#125;else&#123; 条件不成立时执行的代码 &#125; 假设我们通过年龄来判断是否为成年人，如年龄大于等于18岁，是成年人，否则不是成年人。代码表示如下: 1234567&lt;script type="text/javascript"&gt; var myage = 18; if(myage&gt;=18) //myage&gt;=18是判断条件 &#123; document.write("你是成年人。");&#125; else //否则年龄小于18 &#123; document.write("未满18岁，你不是成年人。");&#125;&lt;/script&gt; 函数如何定义一个函数呢？基本语法如下: 1234function 函数名()&#123; 函数代码;&#125; 说明: function定义函数的关键字。 “函数名”你为函数取的名字。 “函数代码”替换为完成特定功能的代码。 我们来编写一个实现两数相加的简单函数,并给函数起个有意义的名字：“add2”，代码如下： 1234function add2()&#123; var sum = 3 + 2; alert(sum);&#125; 函数调用: 函数定义好后，是不能自动执行的，所以需调用它,只需直接在需要的位置写函数就ok了,代码如下: 123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;函数&lt;/title&gt; &lt;script type="text/javascript"&gt; function add2()&#123; sum = 5 + 6; alert(sum); &#125; &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;form&gt; &lt;input type="button" value="点击" onclick="add2()"&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 输出内容（document.write）document.write() 可用于直接向 HTML 输出流写内容。简单的说就是直接在网页中输出内容。 第一种:输出内容用””括起，直接输出””号内的内容。123&lt;script type="text/javascript"&gt; document.write("I love JavaScript！"); //内容用""括起来，""里的内容直接输出。&lt;/script&gt; 第二种:通过变量，输出内容1234&lt;script type="text/javascript"&gt; var mystr="hello world!"; document.write(mystr); //直接写变量名，输出变量存储的内容。&lt;/script&gt; 第三种:输出多项内容，内容之间用+号连接。1234&lt;script type="text/javascript"&gt; var mystr="hello"; document.write(mystr+"I love JavaScript"); //多项内容之间用+号连接&lt;/script&gt; 第四种:输出HTML标签，并起作用，标签使用””括起来。 12345&lt;script type="text/javascript"&gt; var mystr="hello";document.write(mystr+"&lt;br&gt;");//输出hello后，输出一个换行符 document.write("JavaScript");&lt;/script&gt; 警告（alert 消息对话框）我们在访问网站的时候，有时会突然弹出一个小窗口，上面写着一段提示信息文字。如果你不点击“确定”，就不能对网页做任何操作，这个小窗口就是使用alert实现的。 语法: alert(字符串或变量); 看下面的代码: 12345&lt;script type="text/javascript"&gt; var mynum = 30; alert("hello!"); alert(mynum);&lt;/script&gt; 确认（confirm 消息对话框）confirm 消息对话框通常用于允许用户做选择的动作，如：“你对吗？”等。弹出对话框(包括一个确定按钮和一个取消按钮)。 语法: confirm(str); 参数说明: str：在消息对话框中要显示的文本 返回值: Boolean值 当用户点击&quot;确定&quot;按钮时，返回true 当用户点击&quot;取消&quot;按钮时，返回false 注: 通过返回值可以判断用户点击了什么按钮 看下面的代码: 1234567&lt;script type="text/javascript"&gt; var mymessage=confirm("你喜欢JavaScript吗?"); if(mymessage==true) &#123; document.write("很好,加油!"); &#125; else &#123; document.write("JS功能强大，要学习噢!"); &#125;&lt;/script&gt; 提问（prompt 消息对话框）prompt弹出消息对话框,通常用于询问一些需要与用户交互的信息。弹出消息对话框（包含一个确定按钮、取消按钮与一个文本输入框）。 语法: prompt(str1, str2); 参数说明： str1: 要显示在消息对话框中的文本，不可修改 str2：文本框中的内容，可以修改 返回值: 1. 点击确定按钮，文本框中的内容将作为函数返回值 2. 点击取消按钮，将返回null 看看下面代码: 12345var myname=prompt("请输入你的姓名:");if(myname!=null) &#123; alert("你好"+myname); &#125;else &#123; alert("你好 my friend."); &#125; 打开新窗口（window.open）open() 方法可以查找一个已经存在或者新建的浏览器窗口。 语法： window.open([URL], [窗口名称], [参数字符串]) 参数说明: URL：可选参数，在窗口中要显示网页的网址或路径。如果省略这个参数，或者它的值是空字符串，那么窗口就不显示任何文档。 窗口名称：可选参数，被打开窗口的名称。 1. 该名称由字母、数字和下划线字符组成。 2. &quot;_top&quot;、&quot;_blank&quot;、&quot;_self&quot;具有特殊意义的名称。 _blank：在新窗口显示目标网页 _self：在当前窗口显示目标网页 _top：框架网页中在上部窗口中显示目标网页 3. 相同 name 的窗口只能创建一个，要想创建多个窗口则 name 不能相同。 4. name 不能包含有空格。 参数字符串：可选参数，设置窗口参数，各参数用逗号隔开。 参数表：| 参数 | 值 |说明 ||————|————–|————-||top|Number|窗口顶部离开屏幕顶部的像素数||left|Number|窗口左端离开屏幕左端的像素数||width|Number|窗口的宽度||height|Number|窗口的高度||menubar|yes,no|窗口有没有菜单||toolbar|yes,no|窗口有没有工具条||scrollbars|yes,no|窗口有没有滚动条||status|yes,no|窗口有没有状态栏| 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;prompt&lt;/title&gt; &lt;script type="text/javascript"&gt; function Wopen()&#123; window.open('http://www.imooc.com','_blank','width=600,height=400,menubar=no,toolbar=no,status=no,scrollbars=yes,top=10,left=0') &#125; &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;form&gt; &lt;input type="button" value="点击我，打开新窗口" onclick="Wopen()"&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 关闭窗口（window.close）close()关闭窗口 用法： window.close(); //关闭本窗口 或 &lt;窗口对象&gt;.close(); //关闭指定的窗口 例如:关闭新建的窗口。 1234&lt;script type="text/javascript"&gt; var mywin=window.open('http://www.imooc.com'); //将新打的窗口对象，存储在变量mywin中 mywin.close();&lt;/script&gt; 认识DOM文档对象模型DOM（Document Object Model）定义访问和处理HTML文档的标准方法。DOM 将HTML文档呈现为带有元素、属性和文本的树结构（节点树）。 先来看看下面代码: 123456789101112131415&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;DOM&lt;/title&gt;&lt;body&gt; &lt;h2&gt;&lt;a href="http://www.imooc.com"&gt;javascript DOM&lt;/a&gt;&lt;/h2&gt; &lt;p&gt;对HTML元素进行操作，可添加，改变或移除CSS样式等&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JavaScript&lt;/li&gt; &lt;li&gt;DOM&lt;/li&gt; &lt;li&gt;CSS&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; 将HTML代码分解为DOM节点层次图: HTML文档可以说由节点构成的集合，三种常见的DOM节点: 元素节点：上图中&lt;html&gt;、&lt;body&gt;、&lt;p&gt;等都是元素节点，即标签。 文本节点:向用户展示的内容，如&lt;li&gt;...&lt;/li&gt;中的JavaScript、DOM、CSS等文本。 属性节点:元素属性，如&lt;a&gt;标签的链接属性href=”http://www.imooc.com&quot;。 看下面代码: 1&lt;a href="http://www.imooc.com"&gt;JavaScript DOM&lt;/a&gt; 通过ID获取元素学过HTML/CSS样式，都知道，网页由标签将信息组织起来，而标签的id属性值是唯一的，就像是每人有一个身份证号一样，只要通过身份证号就可以找到相对应的人。那么在网页中，我们通过id先找到标签，然后进行操作。 语法: 1document.getElementById(“id”) 看看下面代码: 123456789101112131415&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;获取元素&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p id="con"&gt;JavaScript&lt;/p&gt; &lt;script type="text/javascript"&gt; var mychar = document.getElementById("con"); document.write("结果："+mychar); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 结果:null或[object HTMLParagraphElement] 注:获取的元素是一个对象，如想对元素进行操作，我们要通过它的属性或方法。 innerHTML 属性innerHTML 属性用于获取或替换 HTML 元素的内容。 语法: Object.innerHTML 注意: 1.Object是获取的元素对象，如通过document.getElementById(&quot;ID&quot;)获取的元素。 2.注意书写，innerHTML区分大小写。 我们通过id=”con”获取&lt;p&gt; 元素，并将元素的内容输出和改变元素内容，代码如下: 12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;innerHTML&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p id="con"&gt;Hello World!&lt;/p&gt; &lt;script type="text/javascript"&gt; var mycon = document.getElementById("con"); document.write("p标签原始内容："+mycon.innerHTML+"&lt;br&gt;") // 输入元素内容 mycon.innerHTML="New text!"; document.write("p标签修改后内容："+mycon.innerHTML); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 改变 HTML 样式HTML DOM 允许 JavaScript 改变 HTML 元素的样式。如何改变 HTML 元素的样式呢？ 语法: Object.style.property=new style; 注意:Object是获取的元素对象，如通过document.getElementById(“id”)获取的元素。 看看下面的代码: 改变 &lt;p&gt; 元素的样式，将颜色改为红色，字号改为20,背景颜色改为蓝： 1234567&lt;p id="pcon"&gt;Hello World!&lt;/p&gt;&lt;script&gt; var mychar = document.getElementById("pcon"); mychar.style.color="red"; mychar.style.fontSize="20"; mychar.style.backgroundColor ="blue";&lt;/script&gt; 显示和隐藏（display属性）网页中经常会看到显示和隐藏的效果，可通过display属性来设置。 语法： Object.style.display = value 注意:Object是获取的元素对象，如通过document.getElementById(“id”)获取的元素。 value取值: 值 描述 none 此元素不会被显示，即隐藏 block 此元素将显示为块级元素 123456789101112131415161718192021222324&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;display&lt;/title&gt; &lt;script type="text/javascript"&gt; function hidetext()&#123; var mychar = document.getElementById("con"); mychar.style.display="none"; &#125; function showtext()&#123; var mychar = document.getElementById("con"); mychar.style.display="block"; &#125; &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;JavaScript&lt;/h1&gt; &lt;p id="con"&gt;作为一个web开发师来说，如果你想提供漂亮的网页，令用户满意的上网体验，JavaScript是必不可少的工具&lt;/p&gt; &lt;form&gt; &lt;input type="button" onclick="hidetext()" value="隐藏内容"&gt; &lt;input type="button" onclick="showtext()" value="显示内容"&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 控制类名（className 属性）className 属性设置或返回元素的class 属性。 语法： object.className = classname 作用: 1.获取元素的class 属性 2. 为网页内的某个元素指定一个css样式来更改该元素的外观 1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;className属性&lt;/title&gt; &lt;style type="text/css"&gt; input&#123; font-size: 10px; &#125; .one&#123; width: 200px; background-color: #CCC; &#125; .two&#123; font-size: 18px; color: #F00; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p id="con" class="one"&gt;JavaScript&lt;/p&gt; &lt;form&gt; &lt;input type="button" value="点击更改" onclick="modifyclass()"&gt; &lt;/form&gt; &lt;script type="text/javascript"&gt; var mychar = document.getElementById("con"); document.write("p元素Class值为："+mychar.className+"&lt;br&gt;"); function modifyclass()&#123; mychar.className = "two"; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>JavaScript学习</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python网络爬虫与信息提取(三)：网络爬虫之实战]]></title>
    <url>%2F2017%2F10%2F09%2FPython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B8%8E%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96-%E4%B8%89-%EF%BC%9A%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E5%AE%9E%E6%88%98%2F</url>
    <content type="text"><![CDATA[Re(正则表达式)库入门 regular expression = regex = RE 是一种通用的字符串表达框架,用来简洁表达一组字符串的表达式,也可用来判断某字符串的特征归属 正则表达式的语法 常用操作符 实例 Re库的基本使用 正则表达式的表示类型为raw string类型(原生字符串类型),表示为r’text’ Re库主要功能函数 功能函数 re.search(pattern,string,flags=0) re.match(pattern,string,flags=0) 因为match为从开始位置开始匹配,使用时要加if进行判别返回结果是否为空,否则会报错 re.findall(pattern,string,flags=0) re.split(pattern,string,maxsplit=0,flags=0) maxsplit为最大分割数,剩余部分作为最后一个元素输出 re.finditer(pattern,string,flags=0) re.sub(pattern,repl,string,count=0,flags=0) repl是用来替换的字符串,count为替换次数 Re库的另一种等价用法 Re库的函数式用法为一次性操作,还有一种为面向对象用法,可在编译后多次操作 1regex = re.compile(pattern,flags=0) 通过compile生成的regex对象才能被叫做正则表达式 Match对象的属性 Match对象的方法 例子 Re库的贪婪匹配和最小匹配 Re库默认采取贪婪匹配,即输出匹配最长的子串 实例二:淘宝商品比价定向爬虫(requests-re) 步骤1:提交商品搜索请求,循环获取页面 步骤2:对于每个页面,提取商品名称和价格信息 步骤3:将信息输出显示 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import requestsimport redef getHTMLText(url): try: r = requests.get(url, timeout=30) r.raise_for_status() r.encoding = r.apparent_encoding return r.text except: return ""def parsePage(ilt, html): try: plt = re.findall(r'\"view_price\"\:\"[\d\.]*\"',html) tlt = re.findall(r'\"raw_title\"\:\".*?\"',html) for i in range(len(plt)): price = eval(plt[i].split(':')[1]) title = eval(tlt[i].split(':')[1]) ilt.append([price , title]) except: print("")def printGoodsList(ilt): tplt = "&#123;:4&#125;\t&#123;:8&#125;\t&#123;:16&#125;" print(tplt.format("序号", "价格", "商品名称")) count = 0 for g in ilt: count = count + 1 print(tplt.format(count, g[0], g[1]))def main(): goods = '书包' depth = 3 start_url = 'https://s.taobao.com/search?q=' + goods infoList = [] for i in range(depth): try: url = start_url + '&amp;s=' + str(44*i) html = getHTMLText(url) parsePage(infoList, html) except: continue printGoodsList(infoList)main() 实例三:股票数据定向爬虫 步骤1:从东方财富网获取股票列表 步骤2:根据股票列表逐个到百度股票获取个股信息 步骤3:将结果存储到文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#CrawBaiduStocksB.pyimport requestsfrom bs4 import BeautifulSoupimport tracebackimport redef getHTMLText(url, code="utf-8"): try: r = requests.get(url) r.raise_for_status() r.encoding = code return r.text except: return ""def getStockList(lst, stockURL): html = getHTMLText(stockURL, "GB2312") soup = BeautifulSoup(html, 'html.parser') a = soup.find_all('a') for i in a: try: href = i.attrs['href'] lst.append(re.findall(r"[s][hz]\d&#123;6&#125;", href)[0]) except: continuedef getStockInfo(lst, stockURL, fpath): count = 0 for stock in lst: url = stockURL + stock + ".html" html = getHTMLText(url) try: if html=="": continue infoDict = &#123;&#125; soup = BeautifulSoup(html, 'html.parser') stockInfo = soup.find('div',attrs=&#123;'class':'stock-bets'&#125;) name = stockInfo.find_all(attrs=&#123;'class':'bets-name'&#125;)[0] infoDict.update(&#123;'股票名称': name.text.split()[0]&#125;) keyList = stockInfo.find_all('dt') valueList = stockInfo.find_all('dd') for i in range(len(keyList)): key = keyList[i].text val = valueList[i].text infoDict[key] = val with open(fpath, 'a', encoding='utf-8') as f: f.write( str(infoDict) + '\n' ) count = count + 1 print("\r当前进度: &#123;:.2f&#125;%".format(count*100/len(lst)),end="") except: count = count + 1 print("\r当前进度: &#123;:.2f&#125;%".format(count*100/len(lst)),end="") continuedef main(): stock_list_url = 'http://quote.eastmoney.com/stocklist.html' stock_info_url = 'https://gupiao.baidu.com/stock/' output_file = 'D:/BaiduStockInfo.txt' slist=[] getStockList(slist, stock_list_url) getStockInfo(slist, stock_info_url, output_file)main() /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python网络爬虫与信息提取(二)：网络爬虫之提取]]></title>
    <url>%2F2017%2F10%2F09%2FPython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B8%8E%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96-%E4%BA%8C-%EF%BC%9A%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E6%8F%90%E5%8F%96%2F</url>
    <content type="text"><![CDATA[Beautiful Soup库可对HTML/XML格式进行解析并提取相关信息 安装: pip install beautifulsoup4 小测： 1234567&gt;&gt;&gt; import requests&gt;&gt;&gt; r = requests.get("http://python123.io/ws/demo.html")&gt;&gt;&gt; r.text&gt;&gt;&gt; demo = r.text&gt;&gt;&gt; from bs4 import BeautifulSoup&gt;&gt;&gt; soup = BeautifulSoup(demo,"html.parser")&gt;&gt;&gt; print(soup.prettify()) Beautiful Soup库是解析/遍历/维护”标签熟”的功能库,引用方式: 12from bs4 import BeautifulSoupimport bs4 Beautiful Soup库的4种解析器: Beautiful Soup类的基本元素: bs类基本元素 Tag标签任何存在于HTML语法中的标签都可用**soup.访问获得,存在多个取第一个 Tag的name每个有自己的名字,通过.name获取,字符串类型 Tag的attrs Tag的NavigableString Tag的Comment 由find_all()扩展的七个方法: 实例一:中国大学排名爬虫 123456789101112131415161718192021222324252627282930313233343536#!/usr/bin/env python# coding=utf-8import requestsfrom bs4 import BeautifulSoupimport bs4def getHTMLText(url): try: r = requests.get(url,timeout=30) r.raise_for_status() r.encoding=r.apparent_encoding return r.text except: return "error"def fillUnivList(ulist,html): soup=BeautifulSoup(html,"html.parser") for tr in soup.find('tbody').children: if isinstance(tr,bs4.element.Tag): tds = tr('td') ulist.append([tds[0].string,tds[1].string,tds[2].string])def printUnivList(ulist,num): tplt="&#123;0:^10&#125;\t&#123;1:&#123;3&#125;^10&#125;\t&#123;2:^10&#125;" print(tplt.format("排名","学校名称","总分",chr(12288))) for i in range(num): u=ulist[i] print(tplt.format(u[0],u[1],u[2],chr(12288)))def main(): uinfo=[] url = "http://www.zuihaodaxue.cn/zuihaodaxuepaiming2016.html" html = getHTMLText(url) fillUnivList(uinfo,html) printUnivList(uinfo,20)main() /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python网络爬虫与信息提取(一)]]></title>
    <url>%2F2017%2F10%2F09%2FPython%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B8%8E%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96-%E4%B8%80%2F</url>
    <content type="text"><![CDATA[Requests库的七个主要方法: get方法 r = requests.get(url):右边构造一个向服务器请求资源的Requests对象,左边返回一个包含服务器资源的Response对象给r 完整参数:requests.get(url,params=None,**kwargs),实则由request方法封装 Response对象的五个属性: 爬取网页的通用代码框架 Requests库爬取网页会遇到异常: 6种常见异常： 使用r.raise_for_status()方法构建通用代码框架: 12345678910#!/usr/bin/env python# coding=utf-8def getHTMLText(url)try: r = request.get(url,timeout = 30) r.raise_for_status() r.encoding = r.apparent_encoding return r.textexcept: return "产生异常" HTTP协议对资源的操作: Requests库主要方法:requests.request(method,url,kwargs)** method(请求方式)包括: GET/HEAD/POST/PUT/PATCH/delete/OPTIONS **kwargs(控制访问参数)包括: params(添加键值到url后)/data(字典/字节序列等作为Request的内容)/json/headers(HTTP定制头)/cookies(Request中的cookie)/auth(元祖,支持HTTP认证)/files(传输文件)/timeout/proxies(设定访问代理服务器)/allow_redirects(重定向开关)/stream(获取内容立即下载开关)/verify(认证SSL证书开关)/cert(本地SSL证书路径) Requests库爬取实例 京东商品页面的爬取 123456789import requestsurl = "http://item.jd.com/2967929.html"try: r=requests.get(url) r.raise_for_status() r.encoding=r.apparent_encoding print(r.text[:1000])except: print("爬取失败") 亚马逊商品页面的爬取由于亚马逊有自身的头部审查,故我们模拟浏览器访问: 12345678910import requestsurl = "http://www.amazon.cn/gp/product/B01M8L5Z3Y"try: kv = &#123;'user-agent':'Mozilla/5.0'&#125; r= requests.get(url,headers = kv) r.raise_for_status() r.encoding=r.apparent_encoding print(r.text[1000:2000])except: print("爬取失败") 百度/360搜索关键词提交首先我们需要知道搜索关键词的提交接口:百度:http://www.baidu.com/s?wd=keyword360:http://www.so.com/s?q=keyword接下来我们可以利用params参数将关键词加入,代码如下: 12345678910import requestskeyword = "Python"try: kv = &#123;'wd':keyword&#125; r= requests.get("http://www.baidu.com/s",params = kv) print(r.request.url) r.raise_for_status() print(len(r.text))except: print("爬取失败") 网络图片的爬取和存储 123456789101112131415161718192021#!/usr/bin/env python# coding=utf-8import requestsimport osurl = "http://image.nationalgeographic.com.cn/2017/0311/20170311024522382.jpg"root = "/home/xiaorui/文档/Python/"path = root +url.split('/')[-1]try: if not os.path.exists(root): os.mkdir(root) if not os.path.exists(path): r=requests.get(url) with open(path,'wb') as f: f.write(r.content) f.close() print("文件保存成功") else: print("文件已存在")except: print("爬取失败") IP地址归属地的查询 1234567891011#!/usr/bin/env python# coding=utf-8import requestsurl = "http://m.ip138.com/ip.asp?ip="try: r=requests.get(url+'202.204.80.112') r.raise_for_status() r.encoding=r.apparent_encoding print(r.text[-500:])except: print("爬取失败") /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown新手指南手册]]></title>
    <url>%2F2017%2F10%2F09%2Fmarkdown%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97%E6%89%8B%E5%86%8C%2F</url>
    <content type="text"><![CDATA[标题123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 列表无序列表123- 文本1- 文本2- 文本3 有序列表1231. 文本12. 文本23. 文本3 链接1[显示文本](链接地址) 图片1![](图片链接地址) 引用1&gt; 需要引用的文本 粗体1**文本** 斜体1*文本* 代码引用用两个、、、包围需要引用的代码即可 表格12345|Tables |Are |Cool ||-----------------|:-----------|----||col 3 is |right-aligned | $1600 ||col 2 is |centered | $12 ||zebra stripes | are neat | $1 | 显示效果： Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>Linux学习</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Next主题 文章添加阅读次数，访问量等]]></title>
    <url>%2F2017%2F10%2F06%2FHexo-Next%E4%B8%BB%E9%A2%98-%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0%EF%BC%8C%E8%AE%BF%E9%97%AE%E9%87%8F%E7%AD%89%2F</url>
    <content type="text"><![CDATA[本章所讲给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。效果如下图所示： 打开 Hexo 目录下的 \themes\next\ _config.yml 文件 /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>Hexo学习</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown 编辑器： remarkable 安装(ubuntu)]]></title>
    <url>%2F2017%2F10%2F06%2Fmarkdown-%E7%BC%96%E8%BE%91%E5%99%A8%EF%BC%9A-remarkable-%E5%AE%89%E8%A3%85-ubuntu%2F</url>
    <content type="text"><![CDATA[下载安装包 http://remarkableapp.github.io/linux/download.html 安装之： 1dpkg -i remarkable_1.62_all.deb 补上依赖项： 1sudo apt-get install -f 运行： 1remarkable &amp; /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>安装软件</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客搭建（next主题系列详解）]]></title>
    <url>%2F2017%2F10%2F06%2FHexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%88next%E4%B8%BB%E9%A2%98%E7%B3%BB%E5%88%97%E8%AF%A6%E8%A7%A3%EF%BC%89%2F</url>
    <content type="text"><![CDATA[hexo的next主题配置详解 /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>Hexo学习</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客使用系列（四）——文章里嵌入音乐播放器]]></title>
    <url>%2F2017%2F10%2F05%2FHexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E7%B3%BB%E5%88%97%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94%E6%96%87%E7%AB%A0%E9%87%8C%E5%B5%8C%E5%85%A5%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%2F</url>
    <content type="text"><![CDATA[内嵌播放器 打开网页版网易云选择自己喜欢的音乐或歌单，点开歌曲名或者歌单名，点击生成外链播放器，赋值html代码，将html代码无需任何修改放入markdown文章就可以了。可以取消自动播放。 /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>hexo学习</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python/Django生成二维码]]></title>
    <url>%2F2017%2F10%2F05%2FPython%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81%2F</url>
    <content type="text"><![CDATA[开始安装1.1 用Python来生成二维码很简单，可以看 qrcode 这个包：1pip install qrcode qrcode 依赖 Image 这个包： 1pip install Image 1.2 安装后就可以使用了，这个程序带了一个 qr 命令：1qr 'http://www.ziqiangxuetang.com' &gt; test.png 1.3 下面我们看一下如何在 代码 中使用1234567import qrcodeimg = qrcode.make('http://www.tuweizhong.com')# img &lt;qrcode.image.pil.PilImage object at 0x1044ed9d0&gt;with open('test.png', 'wb') as f: img.save(f) 安装： 12pip install git+git://github.com/ojii/pymaging.git#egg=pymagingpip install git+git://github.com/ojii/pymaging-png.git#egg=pymaging-png 使用方法大致相同，命令行上： 1qr --factory=pymaging "Some text" &gt; test.png Python中调用： 123import qrcodefrom qrcode.image.pure import PymagingImageimg = qrcode.make('Some data here', image_factory=PymagingImage) /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1'); /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://https-xrlrf-github-io.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-107582762-1');]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
